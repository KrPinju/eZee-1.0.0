The current implementation already ensures that changing the selected property in one "Revenue Breakdown" chart does not affect the selection in the other. This is achieved by using distinct URL search parameters (`revenueHotel` for the hotels chart and `revenueCafe` for the cafes/restaurants chart) to store and retrieve the selected entity for each chart independently.

Here's a brief overview of why it works:
1.  **In `src/app/(app)/dashboard/page.tsx`**:
    *   `selectedRevenueHotelName` is derived from `searchParams?.revenueHotel`.
    *   `selectedRevenueCafeName` is derived from `searchParams?.revenueCafe`.
    *   These distinct values are passed as the `initialSelectedEntityName` prop to their respective `RevenueChart` components.
    *   Each `RevenueChart` instance is also given a unique `entityType` prop (`"hotel"` or `"cafe"`).

2.  **In `src/components/charts/revenue-chart.tsx`**:
    *   The `handleEntityChange` function, which is called when a new entity is selected from the dropdown, uses the `entityType` prop to determine the correct URL search parameter to update.
    *   For the hotels chart (`entityType="hotel"`), it updates `searchParams.revenueHotel`.
    *   For the cafes/restaurants chart (`entityType="cafe"`), it updates `searchParams.revenueCafe`.

This separation of URL parameters ensures that updating the selection in one chart only modifies its own specific parameter, leaving the other chart's parameter and thus its selected state unchanged.

Therefore, the requested behavior is already implemented.